1.  Description of any further steps you had to take to get from the automatically constructed choice file to one that would both (a) customize and (b) compile.
    -Initially, our grammar would not validate because verb-pc116 is used for negation. In order to fix this we followed Kristen's advice and added inflectional negation to our choice file using the Grammar Matrix.
    -After this, we had a grammar that would compile correctly, but could not be loaded into LKB
        -We discovered that this was because of two Verb Position Classes that specified both 1st and 2nd Person values
        -These seem to be 2ndSub, 1stObj
        -To fix this, we modified the choices file to take away the conflicting Person constraints

2. Your answers to the questions about the initial and final [incr tsdb()] runs, for both test corpus and test suite, repeated here:
    -For these answers, the "Initial" figures correspond to Grammar 2.0 (beginning of this week), and the "Final" figures correspond to Grammar 2.2

    a. How many items parsed?
        -Corpus Initial: 32/649
        -Corpus Final: 30/649
        -Testsuite Initial: 5/17
        -Testsuite Final: 9/17
    b. What is the average number of parses per parsed item?
        -Corpus Initial: 2.25
        -Corpus Final: 2.23
        -Testsuite Initial: 1.2
        -Testsuite Final: 1.11
    c. How many parses did the most ambiguous item receive?
        -Corpus Initial: 6
        -Corpus Final: 6
        -Testsuite Initial: 2
        -Testsuite Final: 2
    d. What sources of ambiguity can you identify?
        -From what I can make out, it seems like there are several different ways a verb-y cluster can make it through the lexicon having the exact same form. This may be due to optional lexical rules that can apply and not add any morpheme. For instance hiniiʔas=!aƛ=weˑʔin (go outside) can go through either 2->14->35 or just 14->35 in terms of PC irules. In fact, another parse also shows PC2_LRT6 as being optional, so that specific position class may need to be made mandatory. We can put that on our to-do list for next week.
        -Another way verbs can be ambiguous is that they seem to be able to be parsed either as a transitive verb that goes through the lexicon as a V and then become a VP courtesy of the BASIC-HEAD-OPT-COMP rule, or as an intransitive VP that is a VP even before it goes through the lexicon.

    e. For 10 items (if you have at least that many parsing), do any of the parses look reasonable in the semantics? (Emily will demo in class on Tuesday.) 
        -#1590: ʔaƛakʷał-iip, glossed 'eight-get' / "he was the one who got eight"; the _eight_v_rel is present, but nothing for "get"
        -#940: ƛupk-šiƛ k̓ʷalsic, 'wake-MO Kwalisits' / "Kwalisits woke up", there is both a _wake_v_rel and _Kwalisits_n_rel, the ARG1 of the first seems to be properly identified with the ARG0 of the second
        -#970: tux-cpaˑ k̓ʷalsic 'jump-on.side Kwalisits' / "Kwalisits jumped over him" also has a _jump_v_rel whose ARG1 is Kwalisits, but there doesn't seem to be anything about another person being jumped over
        -#990: ḥis-šiƛ 'bleed-PERF' / "It bled", the bleed relation is in place but the aspect information is not included
        -#4050: ʕatiq-šiƛ=suuk 'thank-PERF=NEUT.2SG' / "you thank them"; there is a thank relation, and the ARG1 of this is correctly identified with the 2nd Person Sg index corresponding to XARG
        -#6410: hił=int=waˑʔš maḥt̓aʕs 'at=PST=HRSY.3 Queens.Cove' / "he was at Queens Cove"; there is an _at_v_rel that correctly has an ARG1 identified with XARG, however the _queens.cove_n_rel also identifies its ARG0 witht his index, which seems to be giving the incorrect reading that it is Queen's Cove that is at something
       -#4400: t̓aamuux-ʔatu 'dive.like.a.kingfisher-downward' / "Dive down like a Kingfisher"; most of this word is one morpheme, and the dive relation is present, but there is nothing expressing the "down" relation
       -#110: wawaa 'say.CT' / "he said"; the semantics for this one are surprisingly complex, and the ARG2 of the say relation seems to have an embedded mrs of its own, including something about Focus it seems...although it seems reasonable for the predication of "he said (that) ___"
       -#4150: hupii=suuk 'help=NEUT.2SG' / "Help them"; the _help_v_reln is properly indexed with the 2sg XARG; again there doesn't seem to be a relation for the object
       -#3660:wał-šiƛ-LS=!aƛ=ʔał 'go.home-PERF-GR=TEMP=3PL' / "they were going home"; the _go.home_v_rel is properly indexed with a 3pl XARG; as with other examples, no TAM information seems to be being incorporated

3. Documentation of the phenomena you have added to your testsuite, illustrated with examples from the testsuite.
    -Basic Indicative Mood, marked by the clitic "=maˑ"
        -Example #1: weʔič=maˑ ~ sleep=INDIC ~ `he/she/it/they sleep'
    -Temporal Marker (aspect-ish), marked by clitic "=!aƛ"
        -Example #3: nunuˑk=!aƛ=maˑ ~ sing=TEMP=INDIC ~ `he/she/it/they are singing'
        -(note: David glosses this as =NOW; it seems to add a sort of definiteness to the time, but not necessarily perfective or imperfective)
    -Agreement, mostly 1sg, marked by the clitic "=aˑḥ" or "siˑ"
        -Example #13: weʔič=!aƛ=maˑ=aˑḥ ~ sleep=TEMP=INDIC=1sg ~ `I am sleeping'
        -Example #5: weʔič=!aƛ=mit=siˑ ~ sleep=TEMP=PAST=1sg ~ `I was sleeping'
    -Past Tense, marked by the clitic "=mit"
        -Example #5: weʔič=!aƛ=mit=siˑ ~ sleep=TEMP=PAST=1sg ~ `I was sleeping'
    -Aspect: Perfective, Durative, and Continuative
        -Example #6: ciq-šiƛ=!aƛ=maˑ ~ speak-PER=TEMP=INDIC ~ `he/she/it/they spoke'
        -Example #15: qaḥ=ak ~ die=DUR ~ `dead'
        -Example #17: mat-aˑ ~ fly-CONT ~ `flying'

4. Documentation of the choices you made in the customization system, illustrated with examples from your test suite.
    -The most common problem we worked on this week was adding missing inputs to the verb-pcs. Many of the grammatical examples were not parsing simply because the stem or one of the suffixes was not a valid input to the next suffix. This was easy to fix by adding the inputs to each verb-pc class in the choices file.
        -For example, n̓aacsa, type verb43, was not a valid input to =\!aƛ, verb-pc14, despite being found in our sources as a grammatical combination. I simply added verb43 to verb-pc14_inputs in the choice file in order to allow this combinatin:
	
    -We had to address suffixes that attach only to vowel ending or non-vowel ending strings
    	-From our sources the durative suffix is  =ʔak following a vowel but drops the glottal stop following a non-vowel:  =ak. 
        -In our grammar, verb-pc134 attaches the suffix =ʔak ~ DUR to verb100 (only example łiʔaa 'miss'). this correctly begins with glottal stop because the stem ends in a vowel.
	- However, there was no suffix for  =ak. In order to fix this, I created verb-pc170 in the choice file modeled directly off verb-pc134 but taking verb29 as input because those are the equivalent class but ending with consonates. This allowed us to include both the grammatical
	    qaḥ=ak ~ die=DUR ~ 'dead'
	and the ungramatical
	    qaḥ=ʔak ~ die=DUR ~ `dead'
	to our testsuite.
	
    -One problem we came across was that the Indicitive suffix "=maˑ" and the 1sg agreement suffix "=aˑḥ" were in conflict in our grammar even though they occur together in the natural language
        -We found this was because the rule for the Indicative suffix was also adding the value of 3rd-person, which was incompatible with any other Person value
        -This seems to be because the IGT analyzes the the Indicative as adding 3rd person "by default" if no other agreement occurs. However, this cannot be overridden in our grammar.
        -We confirmed this hypothesis by modifying the tdl files to not at the 3rd person value
	-We then fixed this in the choices file by removing the following lines so that the affix doesn't give a Person value at all
            verb-pc19_lrt3_feat2_name=person / verb-pc19_lrt3_feat2_value=3rd/ verb-pc19_lrt3_feat2_head=subj
	    
    -One attempted fix that ended up not working but is worth noting is the use of the obligotory flag for the posistion classes with non-inflecting suffixes. I initially tried to mark all such pcs as obligatory following the discussion in class but that led to problems.
        -Nuuchahnulth has no marking for 3rd person an uniflected stem is either default 3rd person or a later suffix will attach to specify another value for person.
        -By making the non-inflected stemp obligatory, the uniflected stem was forced to be marked as 3rd person and as a daughter of the obligatory pc.
        -Both these changes made the stems incompatible with later PER suffixes attaching so I removed the obligatory flag I had added.
	-For example this caused weʔič=!aƛ=maˑ=aˑḥ "I am sleeping" to be unparsable because the stem weʔič was forced to have PER 3rd and became an incompatible verb-pc with the first suffix =!aƛ.
	
    -The other substantive change was fleshing out the aspect features for Nuuchahnulth.
        -Nuuchanulth has many ascpects but the aspects for which we were able to find the corresponding suffixes were continuous, durative, and temp (NOW as Inman calls it). 
        -However, there were no actual aspect features and therefore these suffixes attached without adding any actual feature values.
        -In order to enable the aspect features, I used the Grammar matrix to add the three aspects in our testsuite, TEMP, CONT, and DUR. These were added as direct daughters of aspect but should be included under imperfect in once we have perfect aspects as well.
        -Next, I modified the choice file so that the feature aspect would be set to the desired value for each aspect suffix. Since these directly modify the stem verb, the head value was set to 'verb' as well.
	-This allowed the examples like mat-aˑ ~ fly-CONT that were already parsing to actually contain the desired feature and value.


5. Descriptions of any properties of your language illustrated in your test suite but not covered by your starter grammar and/or the customization system.
    -Our testsuite incorporates several notable phenomena from our descriptive grammar that aren't covered by the customization system.
        -Temporal Adjectives: ciq-šiƛ=!aƛ=maˑ=aˑḥ kuʔał=ʔiˑ ~ speak-PERF=TEMP=INDIC=1sg ~ "I spoke in the morning"
            -When we incorporated this I thought that the matrix did adverbs, but this example might not be useful
        -Various bits of information added by suffixes:
            -Repetition Suffix: weʔič-šiƛ=!aƛ=aˑḥ=ƛaa ~ sleep-PERF=TEMP=1sg=AGAIN ~ "I slept again"
        -Overall, the fact that verbs are 3rd-person "by default", and this information is overridden by other suffixes that specifiy otherwise, is very hard to model given the "non-destructive" nature of the Grammar Architecture

6. If you have identified ways (other than those you reported last week) in which the automatically created choices file is particularly off-base, please report them here. If you can include IGT from the testsuite or your descriptive materials illustrating the problem, that is even better. 
